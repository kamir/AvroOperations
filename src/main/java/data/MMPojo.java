/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package data;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Schema for MMPojo */
@javax.annotation.Generated("avro")
@org.apache.avro.specific.AvroGenerated
public class MMPojo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6715251119456886030L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MMPojo\",\"namespace\":\"data\",\"doc\":\"Schema for MMPojo\",\"fields\":[{\"name\":\"dateSent\",\"type\":[\"null\",\"string\"],\"doc\":\"DOC_URL\"},{\"name\":\"nrOfReciepients\",\"type\":\"int\"},{\"name\":\"receiver\",\"type\":[\"null\",\"string\"]},{\"name\":\"sender\",\"type\":[\"null\",\"string\"]},{\"name\":\"size\",\"type\":[\"null\",\"string\"]},{\"name\":\"subject\",\"type\":[\"null\",\"string\"]}],\"javaAnnotation\":\"javax.annotation.Generated(\\\"avro\\\")\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MMPojo> ENCODER =
      new BinaryMessageEncoder<MMPojo>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MMPojo> DECODER =
      new BinaryMessageDecoder<MMPojo>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<MMPojo> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<MMPojo> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MMPojo>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this MMPojo to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a MMPojo from a ByteBuffer. */
  public static MMPojo fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** DOC_URL */
  @Deprecated public java.lang.CharSequence dateSent;

  @Deprecated public int nrOfReciepients;
  @Deprecated public java.lang.CharSequence receiver;
  @Deprecated public java.lang.CharSequence sender;
  @Deprecated public java.lang.CharSequence size;
  @Deprecated public java.lang.CharSequence subject;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MMPojo() {}

  /**
   * All-args constructor.
   * @param dateSent DOC_URL
   * @param nrOfReciepients The new value for nrOfReciepients
   * @param receiver The new value for receiver
   * @param sender The new value for sender
   * @param size The new value for size
   * @param subject The new value for subject
   */
  public MMPojo(java.lang.CharSequence dateSent, java.lang.Integer nrOfReciepients, java.lang.CharSequence receiver, java.lang.CharSequence sender, java.lang.CharSequence size, java.lang.CharSequence subject) {
    this.dateSent = dateSent;
    this.nrOfReciepients = nrOfReciepients;
    this.receiver = receiver;
    this.sender = sender;
    this.size = size;
    this.subject = subject;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return dateSent;
    case 1: return nrOfReciepients;
    case 2: return receiver;
    case 3: return sender;
    case 4: return size;
    case 5: return subject;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: dateSent = (java.lang.CharSequence)value$; break;
    case 1: nrOfReciepients = (java.lang.Integer)value$; break;
    case 2: receiver = (java.lang.CharSequence)value$; break;
    case 3: sender = (java.lang.CharSequence)value$; break;
    case 4: size = (java.lang.CharSequence)value$; break;
    case 5: subject = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'dateSent' field.
   * @return DOC_URL
   */
  public java.lang.CharSequence getDateSent() {
    return dateSent;
  }

  /**
   * Sets the value of the 'dateSent' field.
   * DOC_URL
   * @param value the value to set.
   */
  public void setDateSent(java.lang.CharSequence value) {
    this.dateSent = value;
  }

  /**
   * Gets the value of the 'nrOfReciepients' field.
   * @return The value of the 'nrOfReciepients' field.
   */
  public java.lang.Integer getNrOfReciepients() {
    return nrOfReciepients;
  }

  /**
   * Sets the value of the 'nrOfReciepients' field.
   * @param value the value to set.
   */
  public void setNrOfReciepients(java.lang.Integer value) {
    this.nrOfReciepients = value;
  }

  /**
   * Gets the value of the 'receiver' field.
   * @return The value of the 'receiver' field.
   */
  public java.lang.CharSequence getReceiver() {
    return receiver;
  }

  /**
   * Sets the value of the 'receiver' field.
   * @param value the value to set.
   */
  public void setReceiver(java.lang.CharSequence value) {
    this.receiver = value;
  }

  /**
   * Gets the value of the 'sender' field.
   * @return The value of the 'sender' field.
   */
  public java.lang.CharSequence getSender() {
    return sender;
  }

  /**
   * Sets the value of the 'sender' field.
   * @param value the value to set.
   */
  public void setSender(java.lang.CharSequence value) {
    this.sender = value;
  }

  /**
   * Gets the value of the 'size' field.
   * @return The value of the 'size' field.
   */
  public java.lang.CharSequence getSize() {
    return size;
  }

  /**
   * Sets the value of the 'size' field.
   * @param value the value to set.
   */
  public void setSize(java.lang.CharSequence value) {
    this.size = value;
  }

  /**
   * Gets the value of the 'subject' field.
   * @return The value of the 'subject' field.
   */
  public java.lang.CharSequence getSubject() {
    return subject;
  }

  /**
   * Sets the value of the 'subject' field.
   * @param value the value to set.
   */
  public void setSubject(java.lang.CharSequence value) {
    this.subject = value;
  }

  /**
   * Creates a new MMPojo RecordBuilder.
   * @return A new MMPojo RecordBuilder
   */
  public static data.MMPojo.Builder newBuilder() {
    return new data.MMPojo.Builder();
  }

  /**
   * Creates a new MMPojo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MMPojo RecordBuilder
   */
  public static data.MMPojo.Builder newBuilder(data.MMPojo.Builder other) {
    return new data.MMPojo.Builder(other);
  }

  /**
   * Creates a new MMPojo RecordBuilder by copying an existing MMPojo instance.
   * @param other The existing instance to copy.
   * @return A new MMPojo RecordBuilder
   */
  public static data.MMPojo.Builder newBuilder(data.MMPojo other) {
    return new data.MMPojo.Builder(other);
  }

  /**
   * RecordBuilder for MMPojo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MMPojo>
    implements org.apache.avro.data.RecordBuilder<MMPojo> {

    /** DOC_URL */
    private java.lang.CharSequence dateSent;
    private int nrOfReciepients;
    private java.lang.CharSequence receiver;
    private java.lang.CharSequence sender;
    private java.lang.CharSequence size;
    private java.lang.CharSequence subject;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(data.MMPojo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.dateSent)) {
        this.dateSent = data().deepCopy(fields()[0].schema(), other.dateSent);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.nrOfReciepients)) {
        this.nrOfReciepients = data().deepCopy(fields()[1].schema(), other.nrOfReciepients);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.receiver)) {
        this.receiver = data().deepCopy(fields()[2].schema(), other.receiver);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.sender)) {
        this.sender = data().deepCopy(fields()[3].schema(), other.sender);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.size)) {
        this.size = data().deepCopy(fields()[4].schema(), other.size);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.subject)) {
        this.subject = data().deepCopy(fields()[5].schema(), other.subject);
        fieldSetFlags()[5] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing MMPojo instance
     * @param other The existing instance to copy.
     */
    private Builder(data.MMPojo other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.dateSent)) {
        this.dateSent = data().deepCopy(fields()[0].schema(), other.dateSent);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.nrOfReciepients)) {
        this.nrOfReciepients = data().deepCopy(fields()[1].schema(), other.nrOfReciepients);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.receiver)) {
        this.receiver = data().deepCopy(fields()[2].schema(), other.receiver);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.sender)) {
        this.sender = data().deepCopy(fields()[3].schema(), other.sender);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.size)) {
        this.size = data().deepCopy(fields()[4].schema(), other.size);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.subject)) {
        this.subject = data().deepCopy(fields()[5].schema(), other.subject);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'dateSent' field.
      * DOC_URL
      * @return The value.
      */
    public java.lang.CharSequence getDateSent() {
      return dateSent;
    }

    /**
      * Sets the value of the 'dateSent' field.
      * DOC_URL
      * @param value The value of 'dateSent'.
      * @return This builder.
      */
    public data.MMPojo.Builder setDateSent(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.dateSent = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'dateSent' field has been set.
      * DOC_URL
      * @return True if the 'dateSent' field has been set, false otherwise.
      */
    public boolean hasDateSent() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'dateSent' field.
      * DOC_URL
      * @return This builder.
      */
    public data.MMPojo.Builder clearDateSent() {
      dateSent = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'nrOfReciepients' field.
      * @return The value.
      */
    public java.lang.Integer getNrOfReciepients() {
      return nrOfReciepients;
    }

    /**
      * Sets the value of the 'nrOfReciepients' field.
      * @param value The value of 'nrOfReciepients'.
      * @return This builder.
      */
    public data.MMPojo.Builder setNrOfReciepients(int value) {
      validate(fields()[1], value);
      this.nrOfReciepients = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'nrOfReciepients' field has been set.
      * @return True if the 'nrOfReciepients' field has been set, false otherwise.
      */
    public boolean hasNrOfReciepients() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'nrOfReciepients' field.
      * @return This builder.
      */
    public data.MMPojo.Builder clearNrOfReciepients() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'receiver' field.
      * @return The value.
      */
    public java.lang.CharSequence getReceiver() {
      return receiver;
    }

    /**
      * Sets the value of the 'receiver' field.
      * @param value The value of 'receiver'.
      * @return This builder.
      */
    public data.MMPojo.Builder setReceiver(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.receiver = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'receiver' field has been set.
      * @return True if the 'receiver' field has been set, false otherwise.
      */
    public boolean hasReceiver() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'receiver' field.
      * @return This builder.
      */
    public data.MMPojo.Builder clearReceiver() {
      receiver = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'sender' field.
      * @return The value.
      */
    public java.lang.CharSequence getSender() {
      return sender;
    }

    /**
      * Sets the value of the 'sender' field.
      * @param value The value of 'sender'.
      * @return This builder.
      */
    public data.MMPojo.Builder setSender(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.sender = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'sender' field has been set.
      * @return True if the 'sender' field has been set, false otherwise.
      */
    public boolean hasSender() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'sender' field.
      * @return This builder.
      */
    public data.MMPojo.Builder clearSender() {
      sender = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'size' field.
      * @return The value.
      */
    public java.lang.CharSequence getSize() {
      return size;
    }

    /**
      * Sets the value of the 'size' field.
      * @param value The value of 'size'.
      * @return This builder.
      */
    public data.MMPojo.Builder setSize(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.size = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'size' field has been set.
      * @return True if the 'size' field has been set, false otherwise.
      */
    public boolean hasSize() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'size' field.
      * @return This builder.
      */
    public data.MMPojo.Builder clearSize() {
      size = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'subject' field.
      * @return The value.
      */
    public java.lang.CharSequence getSubject() {
      return subject;
    }

    /**
      * Sets the value of the 'subject' field.
      * @param value The value of 'subject'.
      * @return This builder.
      */
    public data.MMPojo.Builder setSubject(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.subject = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'subject' field has been set.
      * @return True if the 'subject' field has been set, false otherwise.
      */
    public boolean hasSubject() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'subject' field.
      * @return This builder.
      */
    public data.MMPojo.Builder clearSubject() {
      subject = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MMPojo build() {
      try {
        MMPojo record = new MMPojo();
        record.dateSent = fieldSetFlags()[0] ? this.dateSent : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.nrOfReciepients = fieldSetFlags()[1] ? this.nrOfReciepients : (java.lang.Integer) defaultValue(fields()[1]);
        record.receiver = fieldSetFlags()[2] ? this.receiver : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.sender = fieldSetFlags()[3] ? this.sender : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.size = fieldSetFlags()[4] ? this.size : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.subject = fieldSetFlags()[5] ? this.subject : (java.lang.CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MMPojo>
    WRITER$ = (org.apache.avro.io.DatumWriter<MMPojo>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MMPojo>
    READER$ = (org.apache.avro.io.DatumReader<MMPojo>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
